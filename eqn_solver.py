# This script will use the Boltzmann equation data that is generated by the data generator script, and train a scikit-learn classifier. The classifier will be able to know whether two parameters will lead to a physically sound asymmetry or not.

import pandas as pd
import numpy as np
import time
from sklearn.ensemble import RandomForestClassifier
from sklearn import cross_validation
from sklearn.metrics import log_loss
from sklearn.metrics import mean_squared_error
from sklearn.utils import shuffle		# allows to shuffle rows of the dataframes

def data_import(data = 'Asymm_data.csv'):
	return pd.read_csv(data, delimiter=',', header=0, quoting=0)

def train_test_data_split(R):	# R is the ratio of train data compared to the full set
	df = data_import()		# Use df.iloc[i,j] to return specific values
	df = pd.DataFrame(shuffle(df)[:,1:],columns = ['eps','K','Ylf','result','result binary'])	#The output of the shuffling of the dataframe is a list of lists. The first element of each list is the ID of the initial DataFrame. This ID is not part of the data, but merely an index. In order to remove the ID from the shuffled list and to recreate a randomized DataFrame, we have to create a DataFrame out of the elements [:,1:] of the list.
	N_train = int(R*len(df))
	N_test = len(df)-N_train
	train_data = df[:N_train]
	test_data = df[N_train:]
	return test_data[:10]

print train_test_data_split(0.8)




